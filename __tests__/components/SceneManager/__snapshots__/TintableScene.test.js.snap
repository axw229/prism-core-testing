// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TintableScene /> matches snapshot of scene with colored surfaces 1`] = `
<div
  className="prism-scene-manager__scene"
>
  <div
    className="prism-scene-manager__scene__inner"
    style={
      Object {
        "paddingTop": "100%",
      }
    }
  >
    <div
      className="prism-scene-manager__scene__svg-defs"
    >
      <svg
        height="0"
        version="1.1"
        viewBox="0 0 100 100"
        width="0"
        x="0"
        xmlns="http://www.w3.org/2000/svg"
        xmlnsXlink="http://www.w3.org/1999/xlink"
        y="0"
      >
        <defs />
      </svg>
    </div>
    <div
      className="prism-scene-manager__scene__tint-wrapper"
    >
      <img
        className="prism-scene-manager__scene__natural"
        src="someImageURL"
      />
    </div>
    <LiveMessage
      aria-live="polite"
      message="undefined scene has been loaded"
    />
    <div
      className="prism-scene-manager__scene__hit-wrapper"
    >
      <DropTarget(TintableSceneHitArea)
        id={1}
        key="1"
        onClick={[Function]}
        onDrop={[Function]}
        onLoadingError={[Function]}
        onLoadingSuccess={[Function]}
        onOut={[Function]}
        onOver={[Function]}
      />
      <DropTarget(TintableSceneHitArea)
        id={2}
        key="2"
        onClick={[Function]}
        onDrop={[Function]}
        onLoadingError={[Function]}
        onLoadingSuccess={[Function]}
        onOut={[Function]}
        onOver={[Function]}
      />
      <DropTarget(TintableSceneHitArea)
        id={3}
        key="3"
        onClick={[Function]}
        onDrop={[Function]}
        onLoadingError={[Function]}
        onLoadingSuccess={[Function]}
        onOut={[Function]}
        onOver={[Function]}
      />
      <DropTarget(TintableSceneHitArea)
        id={4}
        key="4"
        onClick={[Function]}
        onDrop={[Function]}
        onLoadingError={[Function]}
        onLoadingSuccess={[Function]}
        onOut={[Function]}
        onOver={[Function]}
      />
      <DropTarget(TintableSceneHitArea)
        id={5}
        key="5"
        onClick={[Function]}
        onDrop={[Function]}
        onLoadingError={[Function]}
        onLoadingSuccess={[Function]}
        onOut={[Function]}
        onOver={[Function]}
      />
    </div>
    <TintableSceneOverlay
      type="LOADING"
    />
  </div>
</div>
`;
