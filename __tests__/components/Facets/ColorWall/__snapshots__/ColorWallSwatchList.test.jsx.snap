// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot matches 1`] = `
<IntlProvider
  defaultFormats={Object {}}
  defaultLocale="en"
  formats={Object {}}
  locale="en-US"
  messages={
    Object {
      "ADD_A_COLOR": "ADD A COLOR",
      "ALL_COLORS": "All Colors",
      "BACK_TO_COLOR_WALL": "Back to Color Wall",
      "CANCEL": "Cancel",
      "CANVAS_UNSUPPORTED": "Your browser does not support the canvas element.",
      "CHIP_MAXIMIZED": "Color Chip has been maximized",
      "CHIP_MINIMIZED": "Color Chip has been minimized",
      "COLOR_COLLECTIONS": "Color Collections",
      "COLOR_FAMILIES": "Color Families",
      "COORDINATING_COLORS": "Coordinating Colors",
      "DELETE_PIN": "Delete pin",
      "DETAILS": "Details",
      "DISPLAY_SCENE_PAINTER": "Display the Scene Painter",
      "ERROR_BOUNDARY.ERROR_DETAILS": "Error details",
      "ERROR_BOUNDARY.MESSAGE": "We encountered an error preventing us from rendering this component at this time.",
      "ERROR_BOUNDARY.SHOW_DETAILS": "Show error details",
      "ERROR_BOUNDARY.TITLE": "Sherwin-Williams Color Tools Error",
      "ERROR_LOADING_COLORS": "We're unable to load colors right now.",
      "EXTERIOR": "Exterior",
      "FIND_COLORS_IN_CW": "FIND COLORS IN THE DIGITAL COLOR WALL",
      "HIDE_SCENE_PAINTER": "Hide the Scene Painter",
      "IMAGE_INVISIBLE": "This image is invisible to the user.",
      "INTERIOR": "Interior",
      "LOCATION_NUMBER": "Location Number",
      "MAXIMIZE_COLOR_SWATCH": "Maximize the Color Swatch",
      "NO_COLORS_AVAILABLE": "No colors available.",
      "PAINT_TOOLS.BACK": "Go back",
      "PAINT_TOOLS.CLOSE": "Close tooltip",
      "PAINT_TOOLS.DEFINEAREA": "Create a polygon to fill",
      "PAINT_TOOLS.DELETEGROUP": "Delete the group",
      "PAINT_TOOLS.ERASE": "Remove paint by erasing",
      "PAINT_TOOLS.FORWARD": "Go forward",
      "PAINT_TOOLS.GROUP": "Group the selections",
      "PAINT_TOOLS.HIDEPAINT": "Hide the painted area",
      "PAINT_TOOLS.INFO": "Toggle the tool tips",
      "PAINT_TOOLS.PAINTAREA": "fill a continuous area with color",
      "PAINT_TOOLS.PAINTBRUSH": "Paint using a brush",
      "PAINT_TOOLS.REDO": "Redo an action",
      "PAINT_TOOLS.REMOVEAREA": "Erase an area by creating a polygon",
      "PAINT_TOOLS.SELECTAREA": "Select an area to manipulate",
      "PAINT_TOOLS.TOOLTIPS.DEFINEAREA": "Outline an area to paint it. Be sure to enclose the area by starting and ending at the same point.",
      "PAINT_TOOLS.TOOLTIPS.ERASE": "Remove paint from your scene.",
      "PAINT_TOOLS.TOOLTIPS.HIDEPAINT": "Use this tool to see the original room scene.",
      "PAINT_TOOLS.TOOLTIPS.INFO": "Click here to revisit the Tool Tips.",
      "PAINT_TOOLS.TOOLTIPS.PAINTAREA": "Use the Paint Area feature to automatically detect and paint surface areas. Just click or tap on a surface to highlight it, then click or tap again.",
      "PAINT_TOOLS.TOOLTIPS.PAINTBRUSH": "Allows for the freehand painting of your selected scene. Just point, click or tap and drag to add color to any area.",
      "PAINT_TOOLS.TOOLTIPS.REDO": "Step forward from your last action.",
      "PAINT_TOOLS.TOOLTIPS.REMOVEAREA": "Use this tool to select and remove paint from a defined area.",
      "PAINT_TOOLS.TOOLTIPS.SELECTAREA": "Select an area, then use the tool bar to paint, edit paint colors or remove paint from your scene.",
      "PAINT_TOOLS.TOOLTIPS.SELECTGROUP": "Use this tool to group and edit multiple areas at the same time. Use the Delete tool to remove areas from your scene.",
      "PAINT_TOOLS.TOOLTIPS.UNDO": "Step backwards from your last action.",
      "PAINT_TOOLS.TOOLTIPS.ZOOM": "Zoom in and pan around within your scene to paint small areas with increased accuracy.",
      "PAINT_TOOLS.UNDO": "Undo an action",
      "PAINT_TOOLS.UNGROUP": "Ungroup the selections",
      "PAINT_TOOLS.ZOOM": "Adjust the zoom level",
      "PALETTE_TITLE": "My Color Palette",
      "RESTORE_COLOR_SWATCH_TO_DEFAULT_SIZE": "Restore the Color Swatch to default size",
      "SCENE_DISPLAYED": "Scene is displayed",
      "SCENE_HIDDEN": "Scene is hidden",
      "SEARCH.ERROR.GENERIC": "We were unable to perform your search.",
      "SEARCH.ERROR.HEADLINE": "Something went wrong.",
      "SEARCH.FIND_A_COLOR": "Find a color",
      "SEARCH.NO_RESULTS": "Sorry, no color matches found.",
      "SEARCH.PROMPT": "Enter a color name, number, or family in the text field above.",
      "SEARCH.SEARCH": "Search",
      "SEARCH.SEARCHING": "Searching",
      "SEARCH.SEARCH_BY": "Search by color name or number",
      "SEARCH.SEARCH_COLOR": "Search color",
      "SEARCH.SUGGESTIONS": "Some examples of things you can search for are {suggestions}",
      "SELECT_COLLECTION": "Select Color Collection",
      "SIMILAR_COLORS": "Similar Colors",
      "SWATCH_ACTIVATED_DETAILS": "{color} is selected. Press Enter to view details.",
      "SWATCH_FOCUS": "{color}. Press Enter to select.",
      "TO_DAY_VIEW": "Switch to day view",
      "TO_NIGHT_VIEW": "Switch to night view",
      "VIEW_DETAILS": "View Details",
      "VIEW_DETAILS_FOR": "View details for {name}",
      "ZOOM_IN": "Zoom in",
      "ZOOM_OUT": "Zoom out",
    }
  }
  onError={[Function]}
  textComponent={Symbol(react.fragment)}
>
  <Provider
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(injectIntl(Component))
        colors={Array []}
      >
        <injectIntl(Component)
          colors={Array []}
          history={
            Object {
              "action": "POP",
              "block": [Function],
              "canGo": [Function],
              "createHref": [Function],
              "entries": Array [
                Object {
                  "hash": "",
                  "key": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              ],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "index": 0,
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "key": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            }
          }
          location={
            Object {
              "hash": "",
              "key": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            }
          }
          match={
            Object {
              "isExact": true,
              "params": Object {},
              "path": "/",
              "url": "/",
            }
          }
        >
          <Component
            colors={Array []}
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            intl={
              Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatDateToParts": [Function],
                "formatHTMLMessage": [Function],
                "formatList": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatNumberToParts": [Function],
                "formatPlural": [Function],
                "formatRelativeTime": [Function],
                "formatTime": [Function],
                "formatTimeToParts": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getListFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralRules": [Function],
                  "getRelativeTimeFormat": [Function],
                },
                "locale": "en-US",
                "messages": Object {
                  "ADD_A_COLOR": "ADD A COLOR",
                  "ALL_COLORS": "All Colors",
                  "BACK_TO_COLOR_WALL": "Back to Color Wall",
                  "CANCEL": "Cancel",
                  "CANVAS_UNSUPPORTED": "Your browser does not support the canvas element.",
                  "CHIP_MAXIMIZED": "Color Chip has been maximized",
                  "CHIP_MINIMIZED": "Color Chip has been minimized",
                  "COLOR_COLLECTIONS": "Color Collections",
                  "COLOR_FAMILIES": "Color Families",
                  "COORDINATING_COLORS": "Coordinating Colors",
                  "DELETE_PIN": "Delete pin",
                  "DETAILS": "Details",
                  "DISPLAY_SCENE_PAINTER": "Display the Scene Painter",
                  "ERROR_BOUNDARY.ERROR_DETAILS": "Error details",
                  "ERROR_BOUNDARY.MESSAGE": "We encountered an error preventing us from rendering this component at this time.",
                  "ERROR_BOUNDARY.SHOW_DETAILS": "Show error details",
                  "ERROR_BOUNDARY.TITLE": "Sherwin-Williams Color Tools Error",
                  "ERROR_LOADING_COLORS": "We're unable to load colors right now.",
                  "EXTERIOR": "Exterior",
                  "FIND_COLORS_IN_CW": "FIND COLORS IN THE DIGITAL COLOR WALL",
                  "HIDE_SCENE_PAINTER": "Hide the Scene Painter",
                  "IMAGE_INVISIBLE": "This image is invisible to the user.",
                  "INTERIOR": "Interior",
                  "LOCATION_NUMBER": "Location Number",
                  "MAXIMIZE_COLOR_SWATCH": "Maximize the Color Swatch",
                  "NO_COLORS_AVAILABLE": "No colors available.",
                  "PAINT_TOOLS.BACK": "Go back",
                  "PAINT_TOOLS.CLOSE": "Close tooltip",
                  "PAINT_TOOLS.DEFINEAREA": "Create a polygon to fill",
                  "PAINT_TOOLS.DELETEGROUP": "Delete the group",
                  "PAINT_TOOLS.ERASE": "Remove paint by erasing",
                  "PAINT_TOOLS.FORWARD": "Go forward",
                  "PAINT_TOOLS.GROUP": "Group the selections",
                  "PAINT_TOOLS.HIDEPAINT": "Hide the painted area",
                  "PAINT_TOOLS.INFO": "Toggle the tool tips",
                  "PAINT_TOOLS.PAINTAREA": "fill a continuous area with color",
                  "PAINT_TOOLS.PAINTBRUSH": "Paint using a brush",
                  "PAINT_TOOLS.REDO": "Redo an action",
                  "PAINT_TOOLS.REMOVEAREA": "Erase an area by creating a polygon",
                  "PAINT_TOOLS.SELECTAREA": "Select an area to manipulate",
                  "PAINT_TOOLS.TOOLTIPS.DEFINEAREA": "Outline an area to paint it. Be sure to enclose the area by starting and ending at the same point.",
                  "PAINT_TOOLS.TOOLTIPS.ERASE": "Remove paint from your scene.",
                  "PAINT_TOOLS.TOOLTIPS.HIDEPAINT": "Use this tool to see the original room scene.",
                  "PAINT_TOOLS.TOOLTIPS.INFO": "Click here to revisit the Tool Tips.",
                  "PAINT_TOOLS.TOOLTIPS.PAINTAREA": "Use the Paint Area feature to automatically detect and paint surface areas. Just click or tap on a surface to highlight it, then click or tap again.",
                  "PAINT_TOOLS.TOOLTIPS.PAINTBRUSH": "Allows for the freehand painting of your selected scene. Just point, click or tap and drag to add color to any area.",
                  "PAINT_TOOLS.TOOLTIPS.REDO": "Step forward from your last action.",
                  "PAINT_TOOLS.TOOLTIPS.REMOVEAREA": "Use this tool to select and remove paint from a defined area.",
                  "PAINT_TOOLS.TOOLTIPS.SELECTAREA": "Select an area, then use the tool bar to paint, edit paint colors or remove paint from your scene.",
                  "PAINT_TOOLS.TOOLTIPS.SELECTGROUP": "Use this tool to group and edit multiple areas at the same time. Use the Delete tool to remove areas from your scene.",
                  "PAINT_TOOLS.TOOLTIPS.UNDO": "Step backwards from your last action.",
                  "PAINT_TOOLS.TOOLTIPS.ZOOM": "Zoom in and pan around within your scene to paint small areas with increased accuracy.",
                  "PAINT_TOOLS.UNDO": "Undo an action",
                  "PAINT_TOOLS.UNGROUP": "Ungroup the selections",
                  "PAINT_TOOLS.ZOOM": "Adjust the zoom level",
                  "PALETTE_TITLE": "My Color Palette",
                  "RESTORE_COLOR_SWATCH_TO_DEFAULT_SIZE": "Restore the Color Swatch to default size",
                  "SCENE_DISPLAYED": "Scene is displayed",
                  "SCENE_HIDDEN": "Scene is hidden",
                  "SEARCH.ERROR.GENERIC": "We were unable to perform your search.",
                  "SEARCH.ERROR.HEADLINE": "Something went wrong.",
                  "SEARCH.FIND_A_COLOR": "Find a color",
                  "SEARCH.NO_RESULTS": "Sorry, no color matches found.",
                  "SEARCH.PROMPT": "Enter a color name, number, or family in the text field above.",
                  "SEARCH.SEARCH": "Search",
                  "SEARCH.SEARCHING": "Searching",
                  "SEARCH.SEARCH_BY": "Search by color name or number",
                  "SEARCH.SEARCH_COLOR": "Search color",
                  "SEARCH.SUGGESTIONS": "Some examples of things you can search for are {suggestions}",
                  "SELECT_COLLECTION": "Select Color Collection",
                  "SIMILAR_COLORS": "Similar Colors",
                  "SWATCH_ACTIVATED_DETAILS": "{color} is selected. Press Enter to view details.",
                  "SWATCH_FOCUS": "{color}. Press Enter to select.",
                  "TO_DAY_VIEW": "Switch to day view",
                  "TO_NIGHT_VIEW": "Switch to night view",
                  "VIEW_DETAILS": "View Details",
                  "VIEW_DETAILS_FOR": "View details for {name}",
                  "ZOOM_IN": "Zoom in",
                  "ZOOM_OUT": "Zoom out",
                },
                "onError": [Function],
                "textComponent": Symbol(react.fragment),
                "timeZone": undefined,
              }
            }
            location={
              Object {
                "hash": "",
                "key": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <ColorWallSwatchList
              bloomRadius={0}
              colorWallContext={
                Object {
                  "a11yFocusCell": undefined,
                  "a11yFocusChunk": undefined,
                  "a11yFocusOutline": false,
                  "a11yFromKeyboard": false,
                  "a11yMaintainFocus": false,
                  "colorDetailPageRoot": undefined,
                  "colorWallBgColor": "#EEEEEE",
                  "displayAddButton": false,
                  "displayDetailsLink": true,
                  "displayInfoButton": false,
                  "loading": false,
                  "swatchMaxSize": 33,
                  "swatchMaxSizeZoomed": 50,
                  "swatchMinSize": 14,
                  "swatchMinSizeZoomed": 50,
                  "updateA11y": [Function],
                }
              }
              colors={Array []}
              contain={true}
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
              intl={
                Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatDateToParts": [Function],
                  "formatHTMLMessage": [Function],
                  "formatList": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatNumberToParts": [Function],
                  "formatPlural": [Function],
                  "formatRelativeTime": [Function],
                  "formatTime": [Function],
                  "formatTimeToParts": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getListFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralRules": [Function],
                    "getRelativeTimeFormat": [Function],
                  },
                  "locale": "en-US",
                  "messages": Object {
                    "ADD_A_COLOR": "ADD A COLOR",
                    "ALL_COLORS": "All Colors",
                    "BACK_TO_COLOR_WALL": "Back to Color Wall",
                    "CANCEL": "Cancel",
                    "CANVAS_UNSUPPORTED": "Your browser does not support the canvas element.",
                    "CHIP_MAXIMIZED": "Color Chip has been maximized",
                    "CHIP_MINIMIZED": "Color Chip has been minimized",
                    "COLOR_COLLECTIONS": "Color Collections",
                    "COLOR_FAMILIES": "Color Families",
                    "COORDINATING_COLORS": "Coordinating Colors",
                    "DELETE_PIN": "Delete pin",
                    "DETAILS": "Details",
                    "DISPLAY_SCENE_PAINTER": "Display the Scene Painter",
                    "ERROR_BOUNDARY.ERROR_DETAILS": "Error details",
                    "ERROR_BOUNDARY.MESSAGE": "We encountered an error preventing us from rendering this component at this time.",
                    "ERROR_BOUNDARY.SHOW_DETAILS": "Show error details",
                    "ERROR_BOUNDARY.TITLE": "Sherwin-Williams Color Tools Error",
                    "ERROR_LOADING_COLORS": "We're unable to load colors right now.",
                    "EXTERIOR": "Exterior",
                    "FIND_COLORS_IN_CW": "FIND COLORS IN THE DIGITAL COLOR WALL",
                    "HIDE_SCENE_PAINTER": "Hide the Scene Painter",
                    "IMAGE_INVISIBLE": "This image is invisible to the user.",
                    "INTERIOR": "Interior",
                    "LOCATION_NUMBER": "Location Number",
                    "MAXIMIZE_COLOR_SWATCH": "Maximize the Color Swatch",
                    "NO_COLORS_AVAILABLE": "No colors available.",
                    "PAINT_TOOLS.BACK": "Go back",
                    "PAINT_TOOLS.CLOSE": "Close tooltip",
                    "PAINT_TOOLS.DEFINEAREA": "Create a polygon to fill",
                    "PAINT_TOOLS.DELETEGROUP": "Delete the group",
                    "PAINT_TOOLS.ERASE": "Remove paint by erasing",
                    "PAINT_TOOLS.FORWARD": "Go forward",
                    "PAINT_TOOLS.GROUP": "Group the selections",
                    "PAINT_TOOLS.HIDEPAINT": "Hide the painted area",
                    "PAINT_TOOLS.INFO": "Toggle the tool tips",
                    "PAINT_TOOLS.PAINTAREA": "fill a continuous area with color",
                    "PAINT_TOOLS.PAINTBRUSH": "Paint using a brush",
                    "PAINT_TOOLS.REDO": "Redo an action",
                    "PAINT_TOOLS.REMOVEAREA": "Erase an area by creating a polygon",
                    "PAINT_TOOLS.SELECTAREA": "Select an area to manipulate",
                    "PAINT_TOOLS.TOOLTIPS.DEFINEAREA": "Outline an area to paint it. Be sure to enclose the area by starting and ending at the same point.",
                    "PAINT_TOOLS.TOOLTIPS.ERASE": "Remove paint from your scene.",
                    "PAINT_TOOLS.TOOLTIPS.HIDEPAINT": "Use this tool to see the original room scene.",
                    "PAINT_TOOLS.TOOLTIPS.INFO": "Click here to revisit the Tool Tips.",
                    "PAINT_TOOLS.TOOLTIPS.PAINTAREA": "Use the Paint Area feature to automatically detect and paint surface areas. Just click or tap on a surface to highlight it, then click or tap again.",
                    "PAINT_TOOLS.TOOLTIPS.PAINTBRUSH": "Allows for the freehand painting of your selected scene. Just point, click or tap and drag to add color to any area.",
                    "PAINT_TOOLS.TOOLTIPS.REDO": "Step forward from your last action.",
                    "PAINT_TOOLS.TOOLTIPS.REMOVEAREA": "Use this tool to select and remove paint from a defined area.",
                    "PAINT_TOOLS.TOOLTIPS.SELECTAREA": "Select an area, then use the tool bar to paint, edit paint colors or remove paint from your scene.",
                    "PAINT_TOOLS.TOOLTIPS.SELECTGROUP": "Use this tool to group and edit multiple areas at the same time. Use the Delete tool to remove areas from your scene.",
                    "PAINT_TOOLS.TOOLTIPS.UNDO": "Step backwards from your last action.",
                    "PAINT_TOOLS.TOOLTIPS.ZOOM": "Zoom in and pan around within your scene to paint small areas with increased accuracy.",
                    "PAINT_TOOLS.UNDO": "Undo an action",
                    "PAINT_TOOLS.UNGROUP": "Ungroup the selections",
                    "PAINT_TOOLS.ZOOM": "Adjust the zoom level",
                    "PALETTE_TITLE": "My Color Palette",
                    "RESTORE_COLOR_SWATCH_TO_DEFAULT_SIZE": "Restore the Color Swatch to default size",
                    "SCENE_DISPLAYED": "Scene is displayed",
                    "SCENE_HIDDEN": "Scene is hidden",
                    "SEARCH.ERROR.GENERIC": "We were unable to perform your search.",
                    "SEARCH.ERROR.HEADLINE": "Something went wrong.",
                    "SEARCH.FIND_A_COLOR": "Find a color",
                    "SEARCH.NO_RESULTS": "Sorry, no color matches found.",
                    "SEARCH.PROMPT": "Enter a color name, number, or family in the text field above.",
                    "SEARCH.SEARCH": "Search",
                    "SEARCH.SEARCHING": "Searching",
                    "SEARCH.SEARCH_BY": "Search by color name or number",
                    "SEARCH.SEARCH_COLOR": "Search color",
                    "SEARCH.SUGGESTIONS": "Some examples of things you can search for are {suggestions}",
                    "SELECT_COLLECTION": "Select Color Collection",
                    "SIMILAR_COLORS": "Similar Colors",
                    "SWATCH_ACTIVATED_DETAILS": "{color} is selected. Press Enter to view details.",
                    "SWATCH_FOCUS": "{color}. Press Enter to select.",
                    "TO_DAY_VIEW": "Switch to day view",
                    "TO_NIGHT_VIEW": "Switch to night view",
                    "VIEW_DETAILS": "View Details",
                    "VIEW_DETAILS_FOR": "View details for {name}",
                    "ZOOM_IN": "Zoom in",
                    "ZOOM_OUT": "Zoom out",
                  },
                  "onError": [Function],
                  "textComponent": Symbol(react.fragment),
                  "timeZone": undefined,
                }
              }
              location={
                Object {
                  "hash": "",
                  "key": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                }
              }
              match={
                Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                }
              }
              maxCellSize={50}
              minCellSize={50}
            >
              <section
                className="color-wall-swatch-list color-wall-swatch-list--contain"
                role="application"
                tabIndex={0}
              >
                <AutoSizer
                  disableHeight={false}
                  disableWidth={false}
                  onResize={[Function]}
                  style={Object {}}
                >
                  <div
                    style={
                      Object {
                        "height": 0,
                        "overflow": "visible",
                        "width": 0,
                      }
                    }
                  >
                    <Grid
                      _forceRenderProp5={Array []}
                      _forceRenderProp6={false}
                      aria-label="grid"
                      aria-readonly={true}
                      autoContainerWidth={false}
                      autoHeight={false}
                      autoWidth={false}
                      cellRangeRenderer={[Function]}
                      cellRenderer={[Function]}
                      columnCount={0}
                      columnWidth={50}
                      containerRole="presentation"
                      containerStyle={Object {}}
                      estimatedColumnSize={100}
                      estimatedRowSize={30}
                      getScrollbarSize={[Function]}
                      height={0}
                      isScrollingOptOut={false}
                      noContentRenderer={[Function]}
                      onScroll={[Function]}
                      onScrollbarPresenceChange={[Function]}
                      onSectionRendered={[Function]}
                      overscanColumnCount={6}
                      overscanIndicesGetter={[Function]}
                      overscanRowCount={6}
                      role="presentation"
                      rowCount={0}
                      rowHeight={50}
                      scrollToAlignment="center"
                      scrollToColumn={-1}
                      scrollToRow={-1}
                      scrollingResetTimeInterval={150}
                      style={Object {}}
                      tabIndex={-1}
                      width={0}
                    >
                      <div
                        aria-label="grid"
                        aria-readonly={true}
                        className="ReactVirtualized__Grid"
                        onScroll={[Function]}
                        role="presentation"
                        style={
                          Object {
                            "WebkitOverflowScrolling": "touch",
                            "boxSizing": "border-box",
                            "direction": "ltr",
                            "height": 0,
                            "overflowX": "hidden",
                            "overflowY": "hidden",
                            "position": "relative",
                            "width": 0,
                            "willChange": "transform",
                          }
                        }
                        tabIndex={-1}
                      />
                    </Grid>
                  </div>
                </AutoSizer>
              </section>
            </ColorWallSwatchList>
          </Component>
        </injectIntl(Component)>
      </withRouter(injectIntl(Component))>
    </Router>
  </Provider>
</IntlProvider>
`;
