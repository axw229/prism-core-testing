// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot matches 1`] = `
<IntlProvider
  defaultFormats={Object {}}
  defaultLocale="en"
  formats={Object {}}
  locale="en-US"
  messages={
    Object {
      "ADD_A_COLOR": "ADD A COLOR",
      "BACK_TO_COLOR_WALL": "Back to Color Wall",
      "CANCEL": "Cancel",
      "CANVAS_UNSUPPORTED": "Your browser does not support the canvas element.",
      "CHIP_MAXIMIZED": "Color Chip has been maximized",
      "CHIP_MINIMIZED": "Color Chip has been minimized",
      "COLOR_COLLECTIONS": "Color Collections",
      "COLOR_FAMILIES": "Color Families",
      "COORDINATING_COLORS": "Coordinating Colors",
      "DELETE_PIN": "Delete pin",
      "DETAILS": "Details",
      "DISPLAY_SCENE_PAINTER": "Display the Scene Painter",
      "ERROR_LOADING_COLORS": "We're unable to load colors right now.",
      "EXTERIOR": "Exterior",
      "FIND_COLORS_IN_CW": "FIND COLORS IN THE DIGITAL COLOR WALL",
      "HIDE_SCENE_PAINTER": "Hide the Scene Painter",
      "IMAGE_INVISIBLE": "This image is invisible to the user.",
      "INTERIOR": "Interior",
      "LOCATION_NUMBER": "Location Number",
      "MAXIMIZE_COLOR_SWATCH": "Maximize the Color Swatch",
      "NO_COLORS_AVAILABLE": "No colors available.",
      "PAINT_TOOLS.BACK": "Go back",
      "PAINT_TOOLS.CLOSE": "Close tooltip",
      "PAINT_TOOLS.DEFINEAREA": "Create a polygon to fill",
      "PAINT_TOOLS.DELETEGROUP": "Delete the group",
      "PAINT_TOOLS.ERASE": "Remove paint by erasing",
      "PAINT_TOOLS.FORWARD": "Go forward",
      "PAINT_TOOLS.GROUP": "Group the selections",
      "PAINT_TOOLS.HIDEPAINT": "Hide the painted area",
      "PAINT_TOOLS.INFO": "Toggle the tool tips",
      "PAINT_TOOLS.PAINTAREA": "fill a continuous area with color",
      "PAINT_TOOLS.PAINTBRUSH": "Paint using a brush",
      "PAINT_TOOLS.REDO": "Redo an action",
      "PAINT_TOOLS.REMOVEAREA": "Erase an area by creating a polygon",
      "PAINT_TOOLS.SELECTAREA": "Select an area to manipulate",
      "PAINT_TOOLS.TOOLTIPS.DEFINEAREA": "Outline an area to paint it. Be sure to enclose the area by starting and ending at the same point.",
      "PAINT_TOOLS.TOOLTIPS.ERASE": "Remove paint from your scene.",
      "PAINT_TOOLS.TOOLTIPS.HIDEPAINT": "Use this tool to see the original room scene.",
      "PAINT_TOOLS.TOOLTIPS.INFO": "Click here to revisit the Tool Tips.",
      "PAINT_TOOLS.TOOLTIPS.PAINTAREA": "Use the Paint Area feature to automatically detect and paint surface areas. Just click or tap on a surface to highlight it, then click or tap again.",
      "PAINT_TOOLS.TOOLTIPS.PAINTBRUSH": "Allows for the freehand painting of your selected scene. Just point, click or tap and drag to add color to any area.",
      "PAINT_TOOLS.TOOLTIPS.REDO": "Step forward from your last action.",
      "PAINT_TOOLS.TOOLTIPS.REMOVEAREA": "Use this tool to select and remove paint from a defined area.",
      "PAINT_TOOLS.TOOLTIPS.SELECTAREA": "Select an area, then use the tool bar to paint, edit paint colors or remove paint from your scene.",
      "PAINT_TOOLS.TOOLTIPS.SELECTGROUP": "Use this tool to group and edit multiple areas at the same time. Use the Delete tool to remove areas from your scene.",
      "PAINT_TOOLS.TOOLTIPS.UNDO": "Step backwards from your last action.",
      "PAINT_TOOLS.TOOLTIPS.ZOOM": "Zoom in and pan around within your scene to paint small areas with increased accuracy.",
      "PAINT_TOOLS.UNDO": "Undo an action",
      "PAINT_TOOLS.UNGROUP": "Ungroup the selections",
      "PAINT_TOOLS.ZOOM": "Adjust the zoom level",
      "PALETTE_TITLE": "My Color Palette",
      "RESTORE_COLOR_SWATCH_TO_DEFAULT_SIZE": "Restore the Color Swatch to default size",
      "SCENE_DISPLAYED": "Scene is displayed",
      "SCENE_HIDDEN": "Scene is hidden",
      "SEARCH.ERROR.GENERIC": "We were unable to perform your search.",
      "SEARCH.ERROR.HEADLINE": "Something went wrong.",
      "SEARCH.FIND_A_COLOR": "Find a color",
      "SEARCH.NO_RESULTS": "Sorry, no color matches found.",
      "SEARCH.PROMPT": "Enter a color name, number, or family in the text field above.",
      "SEARCH.SEARCH": "Search",
      "SEARCH.SEARCHING": "Searching",
      "SEARCH.SEARCH_BY": "Search by color name or number",
      "SEARCH.SUGGESTIONS": "Some examples of things you can search for are {suggestions}",
      "SIMILAR_COLORS": "Similar Colors",
      "SWATCH_ACTIVATED_DETAILS": "{color} is selected. Press Enter to view details.",
      "SWATCH_FOCUS": "{color}. Press Enter to select.",
      "TO_DAY_VIEW": "Switch to day view",
      "TO_NIGHT_VIEW": "Switch to night view",
      "VIEW_DETAILS": "View Details",
      "ZOOM_IN": "Zoom in",
      "ZOOM_OUT": "Zoom out",
    }
  }
  onError={[Function]}
  textComponent={Symbol(react.fragment)}
>
  <Provider
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <_default>
        <div
          className="color-wall-mode-btns"
        >
          <div
            className="color-wall-mode-btns__col"
          >
            <div
              className="color-wall-mode-btns__cell"
            >
              <Bar>
                <div
                  className="button-bar__option-container auto-scroll"
                >
                  <ul
                    className="button-bar__options no-list"
                  />
                </div>
              </Bar>
            </div>
            <div
              className="color-wall-mode-btns__cell color-wall-mode-btns__right"
            >
              <Bar>
                <div
                  className="button-bar__option-container auto-scroll"
                >
                  <ul
                    className="button-bar__options no-list"
                  >
                    <Button
                      disabled={true}
                      to="/active/color-wall/family/"
                    >
                      <li
                        className="button-bar__options__option"
                      >
                        <NavLink
                          activeClassName="button-bar__options__option__btn--active "
                          className="button-bar__options__option__btn "
                          disabled={true}
                          onClick={null}
                          to="/active/color-wall/family/"
                        >
                          <Link
                            aria-current={null}
                            className="button-bar__options__option__btn "
                            disabled={true}
                            onClick={null}
                            to={
                              Object {
                                "hash": "",
                                "pathname": "/active/color-wall/family/",
                                "search": "",
                                "state": null,
                              }
                            }
                          >
                            <LinkAnchor
                              aria-current={null}
                              className="button-bar__options__option__btn "
                              disabled={true}
                              href="/active/color-wall/family/"
                              navigate={[Function]}
                              onClick={null}
                            >
                              <a
                                aria-current={null}
                                className="button-bar__options__option__btn "
                                disabled={true}
                                href="/active/color-wall/family/"
                                onClick={[Function]}
                              >
                                <FontAwesomeIcon
                                  border={false}
                                  className="color-families-svg"
                                  fixedWidth={false}
                                  flip={null}
                                  icon={
                                    Array [
                                      "fa",
                                      "palette",
                                    ]
                                  }
                                  inverse={false}
                                  listItem={false}
                                  mask={null}
                                  pull="left"
                                  pulse={false}
                                  rotation={null}
                                  size={null}
                                  spin={false}
                                  swapOpacity={false}
                                  symbol={false}
                                  title=""
                                  transform={null}
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="svg-inline--fa fa-palette fa-w-16 fa-pull-left color-families-svg"
                                    data-icon="palette"
                                    data-prefix="fa"
                                    focusable="false"
                                    role="img"
                                    style={Object {}}
                                    viewBox="0 0 512 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M204.3 5C104.9 24.4 24.8 104.3 5.2 203.4c-37 187 131.7 326.4 258.8 306.7 41.2-6.4 61.4-54.6 42.5-91.7-23.1-45.4 9.9-98.4 60.9-98.4h79.7c35.8 0 64.8-29.6 64.9-65.3C511.5 97.1 368.1-26.9 204.3 5zM96 320c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm32-128c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128-64c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128 64c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z"
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                  </svg>
                                </FontAwesomeIcon>
                                <span
                                  className="color-wall-mode-btns__descendant inherit-font"
                                >
                                  <FormattedMessage
                                    id="COLOR_FAMILIES"
                                    values={Object {}}
                                  >
                                    Color Families
                                  </FormattedMessage>
                                </span>
                              </a>
                            </LinkAnchor>
                          </Link>
                        </NavLink>
                      </li>
                    </Button>
                    <Button
                      to="/active/color-wall/search/"
                    >
                      <li
                        className="button-bar__options__option"
                      >
                        <NavLink
                          activeClassName="button-bar__options__option__btn--active "
                          className="button-bar__options__option__btn "
                          onClick={null}
                          to="/active/color-wall/search/"
                        >
                          <Link
                            aria-current={null}
                            className="button-bar__options__option__btn "
                            onClick={null}
                            to={
                              Object {
                                "hash": "",
                                "pathname": "/active/color-wall/search/",
                                "search": "",
                                "state": null,
                              }
                            }
                          >
                            <LinkAnchor
                              aria-current={null}
                              className="button-bar__options__option__btn "
                              href="/active/color-wall/search/"
                              navigate={[Function]}
                              onClick={null}
                            >
                              <a
                                aria-current={null}
                                className="button-bar__options__option__btn "
                                href="/active/color-wall/search/"
                                onClick={[Function]}
                              >
                                <FontAwesomeIcon
                                  border={false}
                                  className="color-families-svg"
                                  fixedWidth={false}
                                  flip={null}
                                  icon={
                                    Array [
                                      "fa",
                                      "search",
                                    ]
                                  }
                                  inverse={false}
                                  listItem={false}
                                  mask={null}
                                  pull="left"
                                  pulse={false}
                                  rotation={null}
                                  size={null}
                                  spin={false}
                                  swapOpacity={false}
                                  symbol={false}
                                  title=""
                                  transform={null}
                                >
                                  <svg
                                    aria-hidden="true"
                                    className="svg-inline--fa fa-search fa-w-16 fa-pull-left color-families-svg"
                                    data-icon="search"
                                    data-prefix="fa"
                                    focusable="false"
                                    role="img"
                                    style={Object {}}
                                    viewBox="0 0 512 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z"
                                      fill="currentColor"
                                      style={Object {}}
                                    />
                                  </svg>
                                </FontAwesomeIcon>
                                <span
                                  className="color-wall-mode-btns__descendant inherit-font"
                                >
                                  <FormattedMessage
                                    id="SEARCH.SEARCH"
                                    values={Object {}}
                                  >
                                    Search
                                  </FormattedMessage>
                                </span>
                              </a>
                            </LinkAnchor>
                          </Link>
                        </NavLink>
                      </li>
                    </Button>
                  </ul>
                </div>
              </Bar>
            </div>
          </div>
        </div>
      </_default>
    </Router>
  </Provider>
</IntlProvider>
`;
