:root {
  #{ getVarName('scenes.hitAreaOutlineColor') }: getVar('scenes.hitAreaOutlineColor');
}

.prism-scene-manager {
  $hit-area-outline-color: var(getVarName('scenes.hitAreaOutlineColor'));

  @keyframes flashHitArea {
    0% {
      fill: rgba(white,0);
    }

    40% {
      fill: rgba(white,.1);
    }

    100% {
      fill: rgba(white,0);
    }
  }

  @keyframes pulseHitAreaOutline {
    0% {
      stroke: rgba($hit-area-outline-color, .5)
    }

    90%, 100% {
      stroke: rgba($hit-area-outline-color, 1)
    }
  }


  &__block {
    align-items: center;
    display: flex;
    flex-direction: row;

    &--letterbox {
      background: black;
    }

    // BEGIN TODO: REMOVE
    & > * {
      flex: 1 1;
    }
    // END TODO: REMOVE
  }

  &__btn {
    $btn-active-color: rgba(#222, 1);
    $btn-active-color-text: white;
    $btn-focus-color: rgba(#39c, 1);
    $btn-focus-color-text: rgba(white, 1);
    $border-size: 2px;

    border: $border-size solid transparent;
    float: left;
    max-width: 120px;
    padding: 0;
    position: relative;
    z-index: 1;

    img {
      display: block;
      max-width: 100%;
    }

    &:hover {
      border-color: $btn-focus-color;

      &::after {
        background: $btn-focus-color;
        border-color: $btn-focus-color;
        color: $btn-focus-color-text;
      }
    }

    &--active {
      $icon-size: .9rem;

      border-color: $btn-active-color;

      &::after {
        background: $btn-active-color;
        bottom: 0;
        border: $border-size solid $btn-active-color;
        border-bottom: none;
        border-right: none;
        color: $btn-active-color-text;
        content: '\02714\fe0e'; // adding \fe0e to make mobile browsers respect this as text
        font-size: $icon-size;
        line-height: 1.1;
        min-width: $icon-size;
        min-height: $icon-size;
        padding: .1em;
        position: absolute;
        right: 0;
        text-align: center;
      }
    }

    &--disabled {
      opacity: .2;
    }
  }

  &__scene {
    clear: both;
    max-width: 100%;
    position: relative;

    &--disabled {
      filter: saturate(0) brightness(.5) contrast(.75);
      pointer-events: none;
    }

    &__svg-defs {
      height: 0;
      position: absolute;
      width: 0;
      z-index: -1;
    }

    &__tint-wrapper,
    &__hit-wrapper {
      max-width: 100%;
      position: relative;
      width: auto;
    }

    &__preview-wrapper,
    &__hit-wrapper {
      position: absolute;
      top: 0;
      left: 0;
      height: 100%;
      width: 100%;
    }

    &__natural {
      display: block;
      width: 100%;
      position: relative;
      height: auto;
    }

    &__preview-wrapper {
      pointer-events: none;

      &__preview {
        opacity: 0;
        transition: opacity .3s ease-in .0s;
        will-change: opacity;

        &--active {
          opacity: 1;
          transition: opacity .1s ease-out;
        }
      }
    }

    &__hit-area-wrapper,
    &__hit-area,
    &__surface {
      height: 100%;
      left: 0;
      pointer-events: none;
      position: absolute;
      top: 0;
      width: 100%;
    }

    &__hit-area {
      &__mask-loader {
        height: 0;
        position: absolute;
        width: 0;
        z-index: -1;
        visibility: hidden;
      }

      &__mask {
        cursor: pointer;
        fill: transparent;
        opacity: 0;
        pointer-events: all;
        stroke: rgba($hit-area-outline-color, .5);
        stroke-width: 5px;
        transition: opacity .4s ease-out;
        // don't you dare remove this line.
        will-change: opacity;

        &--hover,
        &:hover {
          animation-delay: .2s, 0s;
          animation-direction: normal, alternate;
          animation-duration: .4s, .6s;
          animation-iteration-count: 1, infinite;
          animation-name: flashHitArea, pulseHitAreaOutline;
          animation-timing-function: ease-in-out, ease-out;
          opacity: 1;
          transition: opacity .2s ease-in-out;
        }
      }
    }
  }
}