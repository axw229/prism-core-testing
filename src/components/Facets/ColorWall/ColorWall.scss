// TODO: Refactor this entire file, break into separates

.color-swatch-inner {
  $size-scale: 2;
  $distance-scale: .35;

  $bloom-activate-positioning-delay: .0s;
  $bloom-activate-sizing-delay: .0s;
  $bloom-activate-duration: .2s;

  $bloom-activate-z-delay: 0s;
  $bloom-activate-z-duration: max($bloom-activate-positioning-delay, $bloom-activate-sizing-delay) + $bloom-activate-duration;

  $bloom-deactivate-positioning-delay: .0s;
  $bloom-deactivate-sizing-delay: .0s;
  $bloom-deactivate-duration: .2s;

  $bloom-deactivate-z-delay: 0s;
  $bloom-deactivate-z-duration: max($bloom-deactivate-positioning-delay, $bloom-deactivate-sizing-delay) + $bloom-deactivate-duration;

  @mixin getRaise($scale, $amt, $z) {
    $this-scale: $amt * $scale;
    width: $this-scale;
    height: $this-scale;
    margin: round($this-scale / -2 + 50%) 0 0 round($this-scale / -2 + 50%);
    font-size: $this-scale;
    z-index: $z;
  }

  @keyframes fadeIn {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }

  border: 1px solid #fff;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  position: absolute;
  will-change: top, left, transform, width, height, margin, box-shadow, font-size, z-index;
  /* autoprefixer: ignore next */
  transition-property: top, left, transform, width, height, margin, z-index, box-shadow;

  transition-delay:
    $bloom-deactivate-positioning-delay,
    $bloom-deactivate-positioning-delay,
    $bloom-deactivate-sizing-delay,
    $bloom-deactivate-sizing-delay,
    $bloom-deactivate-sizing-delay,
    $bloom-deactivate-sizing-delay,
    $bloom-deactivate-z-delay,
    $bloom-deactivate-positioning-delay;

  transition-duration:
    $bloom-deactivate-duration,
    $bloom-deactivate-duration,
    $bloom-deactivate-duration,
    $bloom-deactivate-duration,
    $bloom-deactivate-duration,
    $bloom-deactivate-duration,
    $bloom-deactivate-z-duration,
    $bloom-deactivate-duration;

  transition-timing-function: ease-out;
  z-index: 1;
  color: rgba(black, .9);
  cursor: pointer;
  box-shadow: 0 0 0 1px white, 0 0 0px rgba(black, .25);

  &__color-container {
    height: 100%;
    width: 100%;
    top: 0;
    left: 0;
    position: absolute;
    overflow: hidden;
    border: none;
    padding: 0;
    margin: 0;
    border-radius: 0;
  }

  &__content {
    position: relative;
    font-size: 1em;
    padding: .5em;
    animation: fadeIn $bloom-activate-duration ease-in-out ($bloom-activate-duration + max($bloom-activate-sizing-delay, $bloom-activate-positioning-delay)) * 1.25 both;
    text-align: left;
    height: 100%;
    line-height: 1;

    p {
      margin: 0;
    }

    &__add,
    &__details {
      position: absolute;
      bottom: .5em;
      color: inherit;
      background: none;
      border: none;
      padding: 0;
      margin: 0;
      box-shadow: none;
    }

    &__add {
      left: .5em;
    }

    &__details {
      right: .5em;
    }
  }

  &--bloom {
    /* autoprefixer: ignore next */
    transition-property: top, left, transform, width, height, margin, z-index, box-shadow;

    transition-delay:
      $bloom-activate-positioning-delay,
      $bloom-activate-positioning-delay,
      $bloom-activate-sizing-delay,
      $bloom-activate-sizing-delay,
      $bloom-activate-sizing-delay,
      $bloom-activate-sizing-delay,
      $bloom-activate-z-delay,
      $bloom-activate-positioning-delay;

    transition-duration:
      $bloom-activate-duration,
      $bloom-activate-duration,
      $bloom-activate-duration,
      $bloom-activate-duration,
      $bloom-activate-duration,
      $bloom-activate-duration,
      $bloom-activate-z-duration,
      $bloom-activate-duration;

    margin: -50% 0 0 -50%;
    box-shadow: 0 0 0 1px white, 0 0 4px rgba(black, .25);
  }

  &--dark-color {
    color: rgba(white, .9);
  }

  &--lvl {
    &-3 {
      @include getRaise($size-scale, 200%, 800);
      cursor: default;
    }

    &-2-5 {
      @include getRaise($size-scale, 180%, 750);
    }

    &-2 {
      @include getRaise($size-scale, 170%, 700);
    }

    &-1-5 {
      @include getRaise($size-scale, 160%, 650);
    }

    &-1 {
      @include getRaise($size-scale, 130%, 600);
    }
  }

  &--offset {
    &-x {
      &-n2 {
        top: -150% * $distance-scale;
        &--primary {
          top: -166% * $distance-scale;
        }
      }
      &-n1 {
        top: -100% * $distance-scale;
        &--primary {
          top: -125% * $distance-scale;
        }
      }
      &-1 {
        top: 100% * $distance-scale;
        &--primary {
          top: 125% * $distance-scale;
        }
      }
      &-2 {
        top: 150% * $distance-scale;
        &--primary {
          top: 166% * $distance-scale;
        }
      }
    }

    &-y {
      &-n2 {
        left: -150% * $distance-scale;
        &--primary {
          left: -166% * $distance-scale;
        }
      }
      &-n1 {
        left: -100% * $distance-scale;
        &--primary {
          left: -125% * $distance-scale;
        }
      }
      &-1 {
        left: 100% * $distance-scale;
        &--primary {
          left: 125% * $distance-scale;
        }
      }
      &-2 {
        left: 150% * $distance-scale;
        &--primary {
          left: 166% * $distance-scale;
        }
      }
    }
  }
}

.color-wall-swatches {
  // remove whitespace around inline-block elements
  font-size: 0;

  &__swatch {
    display: inline-block;
    position: relative;
    width: percentage(.999/56);
    font-size: .175rem;
    margin: 0;
    padding: 0;

    &::before {
      content: '';
      display: block;
      height: 0;
      margin-bottom: 100%;
      width: 100%;
    }
  }
}

.color-wall-buttons {
  display: flex;
  align-items: center;
}

.color-wall-label {
  flex-grow: 1;
  text-align: center;
  height: 50px;
  line-height: 50px;
  cursor: pointer;
  user-select: none;
}

.color-wall-button {
  display: none;
}

.color-wall-button:checked + .color-wall-label {
  background: #eaeaea;
}
