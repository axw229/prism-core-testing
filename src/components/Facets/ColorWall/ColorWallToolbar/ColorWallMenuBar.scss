$btn-border-thickness: 1px;
$menu-bar-width: 27em;

.menu-bar__border {
  display: flex;
  border: $btn-border-thickness solid var(getThemeColor('buttonBorder'));

  @media (max-width: 473px) {
    flex: 1;
  }
}

.menu-bar {
  cursor: default;
  height: auto;
  position: relative;
  display: flex;

  &-minimal {
    flex-wrap: wrap;
    min-width: 300px;

    @media (max-width: 473px) {
      justify-content: center;
    }

    .search {
      min-height: 54px;
      min-width: 200px;
      // increase width at 883 to force 2nd select to wrap to second line
      @media (max-width: 883px) {
        min-width: 400px;
      }
      // reset width at 670, by this point the 2nd select is naturally wrapped to second line
      @media (max-width: 670px) {
        min-width: 200px;
      }
    }

    .viewEntire {
      display: inline-block;
      text-align: right;
      margin: 0 20px 0 auto;
      min-height: 54px;

      @media (max-width: 473px) {
        margin: 0 20px;
      }
    }

    .menu-bar__button-copy,
    button {
      font-size: 17px;
      line-height: 24px;
      font-weight: 600;
      text-transform: none;
    }

    .menu-bar__button,
    .menu-bar__menu-item {
      justify-content: left;

      @media (max-width: 473px) {
        justify-content: center;
      }

      svg {
        margin-left: 10px;
      }
    }

    span[aria-disabled='true'],
    button[disabled] {
      opacity: 0.2;
    }

    button {
      margin-left: 2px;
      display: flex;
      align-items: center;

      svg {
        height: 21.328 !important;
        width: 21.328 !important;
      }
    }

    .menu-bar__button {
      color: var(getThemeColor('dark'));

      &, &:hover, &:active {
        background: transparent;
      }

      &:hover, &:active {
        color: var(getThemeColor('dark.lighter'));
      }
    }
  }

  &__button {
    align-items: center;
    display: flex;
    height: 100%;
    justify-content: center;
    padding: 0 0.8em;
    width: ($menu-bar-width / 2) + 0.4em;
    cursor: pointer;
    background: var(getThemeColor('buttonBgColor'));
    color: var(getThemeColor('buttonColor'));

    &:hover {
      background: var(getThemeColor('buttonHoverBgColor'));
      color: var(getThemeColor('buttonHoverColor'));
    }

    &:active {
      background: var(getThemeColor('buttonActiveBgColor'));
      color: var(getThemeColor('buttonActiveColor'));
    }
  }

  &__button-copy {
    font-size: 0.6875em;
    height: auto;
    text-transform: var(getVarName('typography.buttonTextTransform'));
    font-weight: var(getVarName('typography.buttonFontWeight'));
    color: inherit;
  }

  &__button-close {
    border-radius: 4px;
    background-color: var(getThemeColor('primary'));
    color: var(getThemeColor('primary.contrast'));
    padding: 3px 9px;
    height: $ui-height-min;
    @include respond-below(xs) {
      min-height: $ui-height-min--mobile;
    }
  }

  &__prime-color-wall-button {
    background-color: var(getThemeColor('buttonBgColor'));
    color: var(getThemeColor('buttonColor'));
    padding: 0 0.8em;
    border-right: $btn-border-thickness solid var(getThemeColor('buttonBorder'));
    text-decoration: none;
    min-height: $ui-height-min;
    line-height: $ui-height-min;

    @include respond-below(xs) {
      min-height: $ui-height-min--mobile;
      line-height: $ui-height-min--mobile;
    }

    &:hover {
      background-color: var(getThemeColor('buttonHoverBgColor'));
      color: var(getThemeColor('buttonHoverColor'));
    }

    &.disabled {
      background-color: var(getThemeColor('buttonActiveBgColor'));
      color: var(getThemeColor('buttonActiveColor'));
    }
  }

  &__menu {
    // @todo theme
    box-shadow: 0 2px 5px -1px rgba(black, 0.65);
    width: 100%;
    height: auto;
    margin-top: 2px;
    position: absolute;
    z-index: 3;
    top: $ui-height-min;

    @include respond-below(xs) {
      top: $ui-height-min--mobile;
      left: 0;
    }
  }

  &__menu-item {
    height: auto;
    opacity: 0.95;
    &--active {
      opacity: 1.0;
      background: var(getThemeColor('buttonActiveBgColor')) !important;
      color: var(getThemeColor('buttonActiveColor')) !important;
    }
  }

  &__menu-link {
    display: inline-block;
    font-size: 0.6875em;
    font-weight: var(getVarName('typography.buttonFontWeight'));
    line-height: normal;
    height: auto;
    padding: 0.8em;
    text-transform: var(getVarName('typography.buttonTextTransform'));
    text-decoration: none;
    width: 100%;
    text-align: left;
    background: var(getThemeColor('white'));

    &:hover {
      background: var(getThemeColor('buttonHoverBgColor'));
      color: var(getThemeColor('buttonHoverColor'));
    }
  }

  &__menu-link.active {
    background: var(getThemeColor('buttonActiveBgColor'));
    color: var(getThemeColor('buttonActiveColor'));
    height: auto;
  }
}

.color-family-menu {
  display: flex;
  margin: 0.5rem 0;
  border: 1px solid var(getThemeColor('buttonBorder'));

  &__width-size {
    position: absolute;
    visibility: hidden;
    z-index: -1;
    width: fit-content;
  }
}

.color-wall-mode-btns__col {
  padding: $ui-spacing;
  .color-wall-mode-btns__cell {
    margin: 0;
  }
}
