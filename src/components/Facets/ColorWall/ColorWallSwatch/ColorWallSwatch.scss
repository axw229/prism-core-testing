@import 'src/scss/convenience/_keyframe-animations.scss';

$focus-z: 100;
$hover-z: 101;
$switchover: sm;
$swatch-font-size: $base;
$swatch-font-size--small: $base * .8;

@mixin swatch-focus() {
  outline: $cw-focus-outline;
  transition: none;
  z-index: $focus-z;

  &:hover {
    outline-width: .1px;
  }
}

.color-swatch-inner {
  $_self: &;

  $bloom-activate-delay: getVar('colorWall.swatchActivateDelayMS') * 1ms;
  $bloom-activate-duration: getVar('colorWall.swatchActivateDurationMS') * 1ms;
  $bloom-activate-z-duration: $bloom-activate-delay + $bloom-activate-duration;

  $bloom-deactivate-delay: getVar('colorWall.swatchDeactivateDelayMS') * 1ms;
  $bloom-deactivate-duration: getVar('colorWall.swatchDeactivateDurationMS') * 1ms;
  $bloom-deactivate-z-duration: $bloom-deactivate-delay + $bloom-deactivate-duration;

  $swatch-scale-amt: 1.25;
  $swatch-scale-amt--zoomed-in: 1.1;

  $bloom-center-size-lg: 275%;
  $bloom-center-size-sm: 250%;

  @function getBloomFalloff($reference, $lvl: 1) {
    $step: 30;
    $falloff-rate: 1.3;

    @return $reference - ( ( $step * poly-pow( $falloff-rate, $lvl ) ) * $lvl );
  }

  @mixin getSwatchRaise($amt, $z, $i: '') {
    width: $amt unquote($i);
    height: $amt unquote($i);
    margin: round($amt / -2 + 50%) 0 0 round($amt / -2 + 50%) unquote($i);
    z-index: $z unquote($i);
    box-shadow: 0 0 0 1px white, 0 0 10px rgba(black, .25) !important;
  }

  @mixin getSwatchEdgeCompensation($amt, $i: '') {
    $compensation-amt: 15; // higher numbers = less offset

    &#{$_self}--compensate-x-n2 {
      left: $amt / -($compensation-amt / 2) unquote($i);
    }

    &#{$_self}--compensate-x-n1 {
      left: $amt / -($compensation-amt) unquote($i);
    }

    &#{$_self}--compensate-x-1 {
      left: $amt / ($compensation-amt) unquote($i);
    }

    &#{$_self}--compensate-x-2 {
      left: $amt / ($compensation-amt / 2) unquote($i);
    }

    &#{$_self}--compensate-y-n2 {
      top: $amt / -($compensation-amt / 2) unquote($i);
    }

    &#{$_self}--compensate-y-n1 {
      top: $amt / -($compensation-amt) unquote($i);
    }

    &#{$_self}--compensate-y-1 {
      top: $amt / ($compensation-amt) unquote($i);
    }

    &#{$_self}--compensate-y-2 {
      top: $amt / ($compensation-amt / 2) unquote($i);
    }
  }

  @mixin getSwatchFocusScaling($scale) {
    &:hover {
      transform: scale($scale);
    }
  }

  border: 1px solid #fff;
  height: 100%;
  width: 100%;
  top: 0;
  left: 0;
  position: absolute;
  font-size: $swatch-font-size--small;
  z-index: 1;

  @include respond-above($switchover) {
    font-size: $swatch-font-size;
  }

  &--clickable {
    cursor: pointer;

    &:focus {
      @include swatch-focus()
    }

    &:hover {
      transition: none;
      z-index: $hover-z;
    }

    .color-wall-swatch-list--show-all & {
      @include getSwatchFocusScaling($swatch-scale-amt);
    }

    .color-wall-swatch-list--zoomed & {
      @include getSwatchFocusScaling($swatch-scale-amt--zoomed-in);
    }
  }

  &--focus {
    @include swatch-focus()

  }

  &--dynamic {
    will-change: top, left, transform, width, height, margin, box-shadow, z-index;
    /* autoprefixer: ignore next */
    transition-property: top, left, transform, width, height, margin, z-index, box-shadow;

    transition-delay: $bloom-deactivate-delay;

    transition-duration:
      $bloom-deactivate-duration,
      $bloom-deactivate-duration,
      $bloom-deactivate-duration,
      $bloom-deactivate-duration,
      $bloom-deactivate-duration,
      $bloom-deactivate-duration,
      $bloom-deactivate-z-duration,
      $bloom-deactivate-duration;

    transition-timing-function: ease-out;
    color: $color-near-black;
    box-shadow: 0 0 0 1px white, 0 0 0px rgba(black, .25) !important;
  }

  &__content {
    position: relative;
    padding: .5em;
    // fade in is used so we don't see the text get mangled as a swatch is activated
    animation: fadeOpacityIn $bloom-activate-duration ease-in-out ($bloom-activate-duration + $bloom-activate-delay) * 1.25 both;
    text-align: left;
    height: 100%;
    line-height: 1;
    overflow: hidden;

    &__number,
    &__name {
      margin: 0;
    }

    &__name {
      font-weight: bold;
    }

    &__number {
      opacity: $color-near-opacity;
      font-size: $swatch-font-size--small;
      margin-bottom: .4em;
    }

    &__cta {
      position: absolute;
      bottom: 1em;
      color: inherit;
      cursor: pointer;
      background: none;
      border: none;
      margin: 0;
      box-shadow: none;
      opacity: $color-near-opacity;
      transition: all .2s;
      text-align: center;

      &:hover, &:focus, &--focus {
        opacity: 1;
      }

      &--focus,
      &:focus {
        outline: $cw-focus-outline;
      }

      &--l {
        left: .5em;
      }

      &--r {
        right: .5em;
      }
    }
  }

  &--dark-color {
    color: rgba(white, .9);
  }

  &--bloom {
    /* autoprefixer: ignore next */
    transition-property: top, left, transform, width, height, margin, z-index, box-shadow;

    transition-delay: 0s !important;

    transition-duration:
      $bloom-activate-duration,
      $bloom-activate-duration,
      $bloom-activate-duration,
      $bloom-activate-duration,
      $bloom-activate-duration,
      $bloom-activate-duration,
      $bloom-activate-z-duration,
      $bloom-activate-duration !important;

    &:hover, &:focus {
      transform: unset !important;
    }

    &:focus {
      outline-width: $cw-focus-outline-size;
    }

    @include getSwatchEdgeCompensation(100%, !important);
  }

  &--bloom-lvl {
    &-0 {
      @include getSwatchRaise($bloom-center-size-sm, 900, !important);

      @include respond-above($switchover) {
        @include getSwatchRaise($bloom-center-size-lg, 900, !important);
      }
      cursor: default;
    }

    &-n0-5 {
      @include getSwatchRaise(getBloomFalloff($bloom-center-size-sm, 1.2), 750, !important);

      @include respond-above($switchover) {
        @include getSwatchRaise(getBloomFalloff($bloom-center-size-lg, 1), 750, !important);
      }
    }

    &-n1 {
      @include getSwatchRaise(getBloomFalloff($bloom-center-size-sm, 1.2), 700, !important);

      @include respond-above($switchover) {
        @include getSwatchRaise(getBloomFalloff($bloom-center-size-lg, 1.5), 700, !important);
      }
    }

    &-n1-5 {
      @include getSwatchRaise(getBloomFalloff($bloom-center-size-sm, 2.1), 650, !important);

      @include respond-above($switchover) {
        @include getSwatchRaise(getBloomFalloff($bloom-center-size-lg, 2), 650, !important);
      }
    }

    &-n2 {
      @include getSwatchRaise(getBloomFalloff($bloom-center-size-sm, 2.1), 600, !important);

      @include respond-above($switchover) {
        @include getSwatchRaise(getBloomFalloff($bloom-center-size-lg, 2.5), 600, !important);
      }
    }
  }

  &__engage-link {
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;
  }
}