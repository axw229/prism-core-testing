// @flow
export type ColorId = string

export type BlankColor = void

export type Color = Object & {
  blue: number,
  brandKey: string,
  colorFamilyNames: Array<string>,
  colorNumber: string,
  coordinatingColors: {
    coord1ColorId: number,
    coord2ColorId: number,
    whiteColorId: number
  },
  cssrgb: string,
  storeStripLocator: string,
  description: Array<string>,
  green: number,
  hex: string,
  hue: number,
  id: ColorId,
  isDark: boolean,
  isExterior: boolean,
  isInterior: boolean,
  lightness: number,
  name: string,
  red: number,
  rgb: number,
  saturation: number,
  similarColors: string[],
  storeStripLocator?: string
}

export type ProbablyColor = Color | BlankColor
export type ColorLine = ProbablyColor[]
export type ColorGrid = ColorLine[]

export type CategorizedColorGrid = {
  [ key: string ]: ColorGrid
}

export type ColorList = Color[]

export type ProbablyColorId = ColorId | BlankColor
export type ColorIdLine = ProbablyColorId[]
export type ColorIdGrid = ColorIdLine[]

export type ColorIdList = ColorId[]

export type CategorizedColorIdGrid = {
  [ key: string ]: ColorIdGrid
}

export type ColorMap = {
  [ key: ColorId ]: Color
}

export type FamilyStructure = {
  name: string,
  default: boolean,
  families: string[]
}[]

export type ColorCollectionDetail = {
  name: string,
  description: string,
  img: string,
  collections: Color[],
  pdfUrl?: string
}

export type ColorDetails = Object & {
  colorNumber: string,
  coordinatingColors: {
    coord2ColorId?: string,
    coord1ColorId?: string
  },
  description: Array<string>,
  id: string,
  isExterior: boolean,
  isInterior: boolean,
  name: string,
  lrv: number,
  brandedCollectionNames?: Array<string>,
  colorFamilyNames: Array<string>,
  brandKey: string,
  red: number,
  green: number,
  blue: number,
  hue: number,
  saturation: number,
  lightness: number,
  hex: string,
  isDark: boolean,
  storeStripLocator?: string,
  similarColors: Array<string>
}

export type CategorizedColorById = {
  [ key: string ]: ColorDetails
}

export type ColorCollectionsTab = Object & {
  id: string,
  tabName: string
}

export type ColorCollectionsTabs = ColorCollectionsTab[]

export type CollectionsTab = Object & {
  id: string,
  tabId: string,
  collections: Array<Object>
}

export type CollectionsSummary = Object & {
  img: string,
  collectionName: string,
  collections: Array<Object>
}

export type ColorStatus = {
  message: string | typeof undefined,
  status: number
}

export type ColorStatuses = {
  [ key: ColorId ]: ColorStatus
}

export type RGBArr = [number, number, number]
export type RGBObj = {
  r: number, g: number, b: number
}
